extends GutTest

var data = [
{"str":"vRGCdtYgFd", "is_good": true },
{"str":"qxuWzJQjglP", "is_good": true },
{"str":"UU41O1bZTpzb", "is_good": true },
{"str":"y7ap9Icl.zOyx", "is_good": true },
{"str":".UzJWFBcNpXKdW", "is_good": true },
{"str":"vFb1yfp4HTiDcuq", "is_good": true },
{"str":"B3GsIzuzdMkbFikv", "is_good": true },
{"str":"p0vY7HjCtUXi04znL", "is_good": true },
{"str":"y4uEr7evno9RwiNA3Q", "is_good": true },
{"str":"eydWDHUUR7GFRgQ5uLK", "is_good": true },
{"str":"u822fRiXJYi41WT3j7Zc", "is_good": true },
{"str":"VDi82YOsgdDXyXYQ6YgQU", "is_good": true },
{"str":"5UjyxlnWVr1E0DvzqT4geE", "is_good": true },
{"str":"Ma9UsChbD6GmbO8.odOiqJT", "is_good": true },
{"str":"HwtOcfbfemIi9si0WIDBhKc2", "is_good": true },
{"str":"dTxl8GdLeISH4BkBccZbDkPnz", "is_good": true },
{"str":"X0Vd6nsHQOk32EvWPEezXWdBNi", "is_good": true },
{"str":"iPqCn2aCRY.QvEeriE0UHd0f.o3", "is_good": true },
{"str":"NK.Hqsxt8fCDMsDfEf6ZGO1CV0Yr", "is_good": true },
{"str":"Mr6lAhzcp0vLKMNEVJHJ7oy.j8kvT", "is_good": true },
{"str":"EImJc3R^^i(cwxWpTP", "is_good": false },
{"str":"hiR5h5gwtJOlGoNw.8udPSzy3EYFE3", "is_good": true },
{"str":"8ye9fyGvI9hNolg5WzSU7ytuXmwpadG", "is_good": true },
{"str":"bKEypjfm7P", "is_good": true },
{"str":"VrvXbwBMhAk", "is_good": true },
{"str":"TyJF.MzM1BWh", "is_good": true },
{"str":"cH8Qu23VE0i9yb", "is_good": true },
{"str":"o4kWJP.YDQcy9Tv", "is_good": true },
{"str":"ssP0OfteH.si9X.1", "is_good": true },
{"str":"Ap1ITlJILKeHS9YBp", "is_good": true },
{"str":"AltPSqajXg8hFwUk6N", "is_good": true },
{"str":"WPq$Qn6JH40s", "is_good": false },
{"str":"Zm1HxwwxdnpJw2Va2yh", "is_good": true },
{"str":"JuCttLHXeUr8Owp2gzrL", "is_good": true },
{"str":"qDk8FwTqQepmOE5K6XtUV", "is_good": true },
{"str":"q2ehBBvRq3vpnNWAeG5kHu", "is_good": true },
{"str":"t^HH)LFO+v8s)AT&DW$K*3Xa94Q", "is_good": false },
{"str":"UlEufcCqKsgCM525oBkCKZI", "is_good": true },
{"str":"Zf4YyPrQeAu94vuOIXOPJma3", "is_good": true },
{"str":"wOeUGVxgLLPA6iDNXzY8BvLMp", "is_good": true },
{"str":"P482aH8LOvoyDBbLR.hiiC3v0t", "is_good": true },
{"str":"5ZSkozrLeDr2PqLfIUl7BQQ99uQ2", "is_good": true },
{"str":"F.wbSZ3gRJvy.YzHgQONYhjiIctkL", "is_good": true },
{"str":"1tCFwGpCycMJPH6l4KM8JxMgtYYoH9", "is_good": true },
{"str":"VeKwZjnSeAfnDB3XKAlXtPdvYma1vMu", "is_good": true },
{"str":"E7CJqtj9d8", "is_good": true },
{"str":"9Zvx3bOTDtn", "is_good": true },
{"str":"fD1KB2LNkKBL", "is_good": true },
{"str":"y5xCtOn7Gwf6X", "is_good": true },
{"str":"HIxyJBWc7fl4Q1", "is_good": true },
{"str":"ttv5F.pEsOk15rN", "is_good": true },
{"str":"uK.gFa.4D1", "is_good": true },
{"str":"u)JoXTX5yWM", "is_good": false },
{"str":"GJnxhQukH+luH", "is_good": false },
{"str":"W#rM$wg$B%IruZ", "is_good": false },
{"str":"g%QMCCqPy7rjr&1", "is_good": false },
{"str":"3*zxs2BG7GM%v7lG", "is_good": false },
{"str":"l5P&(hUXMBpeJSl!1", "is_good": false },
{"str":"YEE#c+Iyg%4hn)BCGl", "is_good": false },
{"str":"Q)oO7ayrEDVv8a*9zEn", "is_good": false },
{"str":"8mhMoNuOpVURF", "is_good": true },
{"str":"X.T!Qll#KJTvIe4YleEu", "is_good": false },
{"str":"YYS^hS$jhpVpCnIOZU%eM", "is_good": false },
{"str":"Hd+2@gPR33FqK(9KO8@$.K", "is_good": false },
{"str":"oZtKeDZ*YBiSZzmwx4_cBGF", "is_good": false },
{"str":"qAvDA*uxDZ(&CmDwUVRqtX2E", "is_good": false },
{"str":"N@ANytd*SPtZmzLVx2!QjPc@h", "is_good": false },
{"str":"cx59M+2pjyXuq%MPY0qx3^GPs+", "is_good": false },
{"str":"omSn*+3d*(18T0O.owXSVnYpX#Xp", "is_good": false },
{"str":"VnArBS3e27S$XolORtQSg*ZC#!T8s", "is_good": false },
{"str":"14@UKhbRs869Mwv0Dm*V.(XFKtuqfH", "is_good": false },
{"str":"_@1+x2aNNwe65_frndR%knuq5kT1s4J", "is_good": false },
{"str":"9FqG.13e6CFT2z7vgy6hEtPzBoa", "is_good": true },
{"str":"KW4mbcXE36", "is_good": true },
{"str":"D6L$9dn(g0q", "is_good": false },
{"str":"p8ya&%p)5k&3", "is_good": false },
{"str":"Or15JCTbrMVAY", "is_good": true },
{"str":"ZUb3+1o1.g3xpJ", "is_good": false },
{"str":"0XRYlD6tXTBo+HP", "is_good": false },
{"str":"Xuaez)LU1jQK6dZ&", "is_good": false },
{"str":"C(1kMlCzqRDsMOUp)", "is_good": false },
{"str":"qCOzSvj82f&Q*jl#+g@", "is_good": false },
{"str":"UD3Ef6ae_@Qw+8Wa6aOV", "is_good": false },
{"str":"zygm7AItKz(4%I@+mjICn", "is_good": false },
{"str":"alBaI1k(.csbbiql@_rHGY", "is_good": false },
{"str":"v@&v1E02XnzqaUM5fBt^^L2", "is_good": false },
{"str":"UK4321prQuqis&KGzCpjtNh7", "is_good": false },
{"str":"_NC9Uqop90ZSs39CtdEOXg8n+", "is_good": false },
{"str":"BnbW6gz7*)t9vM4+1gk4+u0H6R", "is_good": false },
{"str":"ssvj8qQzDU4.bH#5&fEks8j+WlZ", "is_good": false },
{"str":"ur)xOH2N9vnk^lMTm89gHhDXkV1p", "is_good": false },
{"str":"iypdkCD(HA!R3iHlhb&%t0fLA)kaX", "is_good": false },
{"str":"ePi5Y.uU+Q5ZqT.tBbbk9*b6n!u.y8", "is_good": false },
{"str":"*4EybKDj9hV2fB+g^wlPa^%5R(OnNZc", "is_good": false },
{"str":"Ch%OjCO%uj", "is_good": false },
{"str":"SzmCPer$#xa", "is_good": false },
{"str":"F0^)Ho+E#$)!", "is_good": false },
{"str":"TORd7to1%EtqV", "is_good": false },
{"str":"dQP9W6vY02#fC&", "is_good": false },
{"str":"iL68L!+49Q_XzBs", "is_good": false },
]

var regex = RegEx.new()
var error = regex.compile("^[a-zA-Z0-9.]+$")

func parse_regex(path):
	var result = regex.search(path)
	return result != null
	
func test_regex():
	for i in range(100):
		for test in data:
			var ret = parse_regex(test["str"])
			if test["is_good"]:
				assert_true(ret)
			else:
				assert_false(ret)
			
	
